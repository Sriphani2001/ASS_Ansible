# Playbook to deploy HAProxy and Flask app on existing hosts

# Part 1: Deploy Flask app on webservers
- hosts: webservers
  become: yes
  gather_facts: yes
  
  tasks:
    # Update apt cache
    - name: Update apt cache
      apt:
        update_cache: yes

    # Install Python 3 and pip
    - name: Install Python 3 and pip
      apt:
        name:
          - python3
          - python3-pip
        state: present

    # Install Flask
    - name: Install Flask
      pip:
        name: Flask
        state: latest
        
 # Install Python 3 Flask package
    - name: Install Python 3 Flask package
      apt:
        name: python3-flask
        state: latest
        
    # Fetch Flask application
    - name: Fetch Flask application
      copy:
        src: application2.py
        dest: /home/ubuntu/application2.py

    # Install Gunicorn
    - name: Install Gunicorn
      apt:
        name: gunicorn
        state: latest

   
     
    - name: copy the flask app code to the servers
      copy:
        src:  /$PWD/application2.py
        dest: /home/ubuntu/application2.py
        owner: ubuntu
        mode: '0644'
             

    # Install SNMPd
    - name: Install SNMPd
      apt:
        name: snmpd
        state: latest

    # Configure SNMPd
    - name: Configuring SNMPd
      template:
        src: "./snmpd.conf"
        dest: "/etc/snmp/snmpd.conf"

    # Restart SNMPd
    - name: Restart SNMPd
      service:
        name: snmpd
        state: restarted
        enabled: yes

    # Copy Flask application file
    - name: Copy Flask application file
      copy:
        src: application2.py
        dest: /home/ubuntu/application2.py

    # Run Flask app using Gunicorn
    - name: Run Flask app
      shell: gunicorn -w 2 -D -b 0.0.0.0:80 application2:app
      
# Part 2: Configure HAProxy
- become: yes
  hosts: HAproxy
  gather_facts: yes
  
  tasks:
    # Update apt cache
    - name: Update apt cache
      apt:
        update_cache: yes

    #Istallation of curl
    - name: Install curl
      apt:
        name: curl
        state: latest    

    # Install HAProxy
    - name: Install HAProxy
      apt:
        name: haproxy
        state: latest

    # Delete previous HAProxy configuration
    - name: Delete previous HAProxy configuration
      file:
        path: "/etc/haproxy/haproxy.cfg"
        state: absent

    # Deploy new HAProxy configuration
    - name: Deploy new HAProxy
      template:
        src: "./haproxy.cfg.j2"
        dest: "/etc/haproxy/haproxy.cfg"
      notify: Start HAProxy

    # Restart HAProxy service
    - name: Restart HAProxy
      service:
        name: haproxy
        state: restarted
        enabled: yes
 


    
  handlers:
    # Handler to restart HAProxy after configuration change
    - name: Start HAProxy
      service:
        name: haproxy
        state: restarted


